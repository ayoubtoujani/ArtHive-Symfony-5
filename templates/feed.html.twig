<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css">
    <link rel="stylesheet" href="https://unpkg.com/aos@next/dist/aos.css" />
    <link rel="stylesheet" href="/css/styleFeed.css">
<style>
    @import url("http://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600&display=swap");
:root {
    --color-white:white;
    --color-light:rgb(252, 30%, 95%);
    --color-gray: rgb(128, 128, 128);
    --color-primary: blue;
    --color-secondary: white;
    --color-success: green;
    --color-danger: red;
    --color-dark:rgb(252, 30%, 17%);
    --color-black: black;

    --border-radius: 2em;
    --card-border-radius: 1rem;
    --btn-padding: 0.6rem 2rem;
    --search-padding: 0.6rem 1rem;
    --card-padding: 1rem;
    --sticky-top-left: 5.4rem;
    --sticky-top-right: -18rem;

}

*,
*::before,
*::after {
    margin: 0;
    padding: 0;
    outline: 0;
    box-sizing: border-box;
    text-decoration: none;
    list-style: none;
    border: none;
}
body{
    font-family: "Poppins", sans-serif;
    color: var(--color-dark);
    background:rgb(242, 241, 241);
    overflow-x: hidden ;
}
.container {
    width: 80%;
    margin: 0 auto;
    display: flex;
    align-items: flex-start; /* Aligner les éléments au début de l'axe transversal */
    column-gap: 2rem;
    position: relative;
}
.profile-photo {
    width: 2.7rem;
    aspect-ratio: 1/1;
    border-radius: 50%;
    overflow: hidden;
}
img{
    display: block;
    width: 100%;
}
.btn{
    display: inline-block;
    padding: var(--btn-padding);
    font-weight: 500;
    border-radius: var(--border-radius);
    cursor: pointer;
    transition: all 300ms ease;
    font-size: 0.9rem;
    text-align: center;
}
.btn:hover {
    opacity: 0.8;
}
.btn-primary{
    background: var(--color-primary);
    color: white;
}
.text-bold {
    font-weight: 500;
}
.text-muted {
    color: var(--color-gray);
}
/*==================================================NAVBAR=====================*/
nav {
    width: 100%;
    background: white;
    padding: 0.7rem 0;
    position: fixed;
    top: 0;
    z-index: 10;
}
nav .container {
    display: flex;
    align-items: center;
    justify-content: space-between;
}

nav .search-bar{
    background:rgb(242, 241, 241) ;
    border-radius: var(--border-radius) ;
    padding: var(--search-padding);
}
nav .search-bar input[type="search"] {
    background: rgb(242, 241, 241);
    width: 30vw;
    margin-left: 1rem;
    font-size: 0.9rem;
    color: var(--color-dark);
}
nav .search-bar input[type="search"]::placeholder {
    color: var(--color-gray);
}
nav .create {
    display: flex;
    align-items: center;
    gap: 2rem;
}

/*======================================================= MAIN =============================================== */
main {
    position: relative;
    top: 5.4rem;
}
main .container {
    display: flex;
    grid-template-columns: 18vw 1fr ;
    column-gap: 2rem;
    position: relative;
}
/*======================================================= LEFT ============================================= */
main .container .left{
    height: max-content;
    position: sticky;
    top: var(--sticky-top-left);
    left: -10rem; /* Ajoutez cette ligne pour décaler la barre latérale de 2rem vers la gauche */
}
main .container .left .profile {
    padding: var(--card-padding);
    background: var(--color-white);
    border-radius: var(--card-border-radius);
    display: flex;
    align-items: center;
    column-gap: 1rem;
    width: 100%;

}
/*=========================== SIDEBAR =======================*/


.left {
    margin-left: 0; /* Réinitialiser la marge */
    flex: 0 0 8vw; /* Définir la largeur fixe pour correspondre à la barre latérale */
}

.left .profile {
    padding: var(--card-padding);
    background: var(--color-white);
    border-radius: var(--card-border-radius);
    display: flex;
    align-items: center;
    column-gap: 1rem; /* Espacement horizontal entre la photo et le nom */
    width: calc(100% + 2rem); /* Ajustez la largeur pour compenser le déplacement */
}




.left .sidebar{
    margin-top: 1rem;
    background: var(--color-white);
    border-radius: var(--card-border-radius);
    margin-left: -7rem; /* Décaler la barre latérale vers la gauche */
}

.left .sidebar .menu-item {
    display: flex;
    align-items: center;
    height: 4rem;
    cursor: pointer;
    transition: all 300ms ease;
    position: relative;
}
.left .sidebar .menu-item:hover {
    background: rgb(242, 241, 241);
}
.left .sidebar i{
    font-size: 1rem;
    color: gray;
    margin-left: 1rem;
    position: relative;
}
.left .sidebar h3 {
    margin-left: 1.5rem;
    font-size: 1rem;
}
.left .sidebar .active {
    background:  rgb(242, 241, 241);
}
.left .sidebar .active i,
.left .sidebar .active h3 {
    color: rgb(72, 72, 237);
}
.left .sidebar .active::before{
    content: "";
    display: block;
    width: 0.3rem;
    height: 100%;
    position: absolute;
    background:  rgb(72, 72, 237);
}
.left .sidebar .menu-item:first-child.active {
    border-top-left-radius: var(--card-border-radius);
    overflow: hidden;
}
.left .sidebar .menu-item:last-child.active {
    border-bottom-left-radius: var(--card-border-radius);
    overflow: hidden;
}

.button {
            --color: rgb(72, 72, 237);
            font-family: inherit;
            display: inline-block;
            width: 8em;
            height: 2.6em;
            line-height: 2.5em;
            margin: 20px;
            position: relative;
            overflow: hidden;
            border: 2px solid var(--color);
            transition: color .5s;
            z-index: 1;
            font-size: 17px;
            border-radius: 6px;
            font-weight: 500;
            color: var(--color);
        }

        .button:before {
            content: "";
            position: absolute;
            z-index: -1;
            background: var(--color);
            height: 150px;
            width: 200px;
            border-radius: 50%;
        }

        .button:hover {
            color: #fff;
        }

        .button:before {
            top: 100%;
            left: 100%;
            transition: all .7s;
        }

        .button:hover:before {
            top: -30px;
            left: -30px;
        }

        .button:active:before {
            background: #5112e3;
            transition: background 0s;
        }

  </style>


    <title>{% block title %}ArtHive{% endblock %}</title>
    {% block stylesheets %}{% endblock %}

</head>
<body>
   <body>
    <nav>
        <div class="container">
            <h2 class="log">ArtHive</h2>
            {% block search_bar %}
            <div class="search-bar">
                <i class="fa-solid fa-magnifying-glass"></i>
                <input type="search" placeholder="Rechercher des artistes, des inspirations.">
            </div>
            {% endblock %}
            <div class="create">
                <label class="btn btn-primary"   for="créer post">Créer</label>
                
                <div class="profile-photo">
                      <img src="{{ asset('images/' ~ user.getPhoto() ) }}" style="width: 50px; height: 50px; " alt="">
                </div>
            <a href="{{ path('app_login') }}" class="btn btn-primary">Log Out</a>
  
 



        </div>
        </div>
    </nav>

    <!...............................MAIN...........................>
    <main> 
        <div class="container">
    <!..............................LEFT.............................>
            <div class="left">
                <a class="profile">
                    <div class="profile-photo">
                      <img src="{{ asset('images/' ~ user.getPhoto() ) }}" style="width: 30px; height: 30px;" alt="">

                    </div>
                   {% if user is not null %}
    <div class="handle" id="nameLoggedinuser">
        <h4>{{ user.getNomUser() }} {{ user.getPrenomUser() }}</h4>
        <p class="text-muted">@{{ user.getNomUser() }}</p>
    </div>
{% endif %}
                </a>
                <!.................................SIDEBAR.....................................>
                <div class="sidebar">
                <a class="menu-item " id="home" href="{{path('afficher_publications')}}" >
                        <span><i class="fa-solid fa-house"></i></span><h3>Home</h3>
                    </a>
                    <a class="menu-item " href="{{ path('my_publications') }}" id="profile">
    <span><i class="fa-solid fa-user"></i></span><h3>Profile</h3>
</a>
                    <a class="menu-item" id="groups" >
                        <span><i class="fa-solid fa-people-group"></i></span><h3>Groupes</h3>
                    </a>
                    <a class="menu-item"id = "marketplace">
                        <span><i class="fa-solid fa-shop"></i></span><h3>Marketplace</h3>
                    </a>
                    <a class="menu-item" id= "events" >
                        <span><i class="fa-solid fa-calendar-days"></i></span><h3>Events</h3>
                    </a>
                    <a class="menu-item " id ="themes">
                        <span><i class="fa-solid fa-palette"></i></span><h3>Themes</h3>
                    </a>
                </div>
                <!.................END OF SIDEBAR............>
                <label id="create-post-button" for="create-post" class="btn btn-primary" style="padding: 0.6rem 2rem; margin-top: 1rem; position:center;">
                    <i class="fa-solid fa-circle-plus"></i> 
                    Créer</label>
            </div>
    <!............................MIDDLE...............................>
        <div class="content" style="width: 130%; height: auto;">
            {% block content %}
           
            {% endblock %}
        </div> 
                   
 </div>
</main>
 <script>
     document.addEventListener("DOMContentLoaded", function() {
            const menuItems = document.querySelectorAll('.menu-item');
            function activateMenuItem(item) {
                menuItems.forEach(otherItem => {
                    otherItem.classList.remove('active');
                });
                item.classList.add('active');
                // Enregistrer l'ID de l'élément actif dans le stockage local
                localStorage.setItem('activeMenuItemId', item.id);
            }

            menuItems.forEach(item => {
                item.addEventListener('click', () => {
                    activateMenuItem(item);
                });
            });

            // Vérifier s'il y a un élément de menu actif enregistré dans le stockage local
            const activeMenuItemId = localStorage.getItem('activeMenuItemId');
            if (activeMenuItemId) {
                const activeMenuItem = document.getElementById(activeMenuItemId);
                if (activeMenuItem) {
                    activateMenuItem(activeMenuItem);
                }
            }    
        });
    </script>
</body>
</html>