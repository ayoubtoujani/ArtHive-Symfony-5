{% extends 'feed.html.twig' %}

{% block title %}
    Achat | ArtHive
{% endblock %}

{% block panier %}
{{ parent() }}

{% endblock %} 

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="{{ asset('/styleFeed.css') }}">
    
    
    <style>
       .product-details-container {
            display: flex;
             border: 1px solid #ffffff; /* Bordure blanche */
            border-radius: 10px; /* Rayon de la bordure */
            background-color: #fff;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            padding: 40px;
            height: 550px;
            width: 900px;
            margin-top: 20px;
         
            padding: 35px;
            margin-left: -80px;

        }

        .left {
            flex: 1;
        }

        .product-image {
            height: 500px;
            width: 600px; /* Réglez la largeur maximale de l'image selon vos besoins */
            display: block;
            margin-right: 30px; /* Ajoutez un espace entre l'image et les détails du produit */
             border-radius: 10px;
        }

        .product-details {
            line-height: 1.5;
        }

        .product-details h2 {
            color: #4848ed; 
            font-size: 32px;
            margin-bottom: 10px; /* Ajoute une marge en bas du titre */
        }

        .product-details h4 {
            color: #1877f2;
            font-size: 20px;
            margin-bottom: 5px; /* Ajoute une marge en bas du prix */
        }

        .product-details h5 {
            color: #3642dd; /* Couleur du texte pour le prix */
            font-size: 20px; /* Taille de la police pour le prix */
            margin-bottom: 10px; 
        }

        .product-details .stock {
            font-size: 17px; /* Taille de la police pour la phrase de stock */
            color: #77aaecee; /* Couleur du texte */
        }

        .product-details .description {
            margin-bottom: 15px; /* Ajoute une marge en bas de la description */
            color: #333; /* Couleur du texte */
            font-size: 20px; /* Taille de la police */
        }

        h1 {
            color: #4848ed; /* Couleur du texte en bleu */
        }

        h3 {
            color: #4d5053ee; 
            margin-bottom: 15px;
            font-size: 18px;
        }

        .input-spinner {
                display: flex;
                align-items: center;
                padding: 5px;
                margin-top: 10px; /* Espacement par rapport au contenu précédent */
            
            }

            .input-spinner input,
            .spinner input {
                margin-top: 20px;
                width: 50px; /* Largeur de l'input */
                height: 30px;
                border: 1px solid #ccc; /* Bordure grise */
                border-radius: 5px;
                text-align: center; /* Centre le texte dans l'input */
                cursor: auto; 
            }

        
         .btn-ajouter-panier,
         .btn-supprimer-panier,
         .btn-supptoute-panier,
         .btn-passerComm {
            width: 120px; 
            margin-top: 20px;
            background-color: #3642dd; /* Couleur du bouton */
            color: white;
            padding: 8px 8px;
            text-decoration: none;
            border-radius: 30px;
            margin-left: 30px; 
            transition: background-color 0.3s ease; /* Transition pour l'animation */
        }

        .btn-ajouter-panier:hover,
        .btn-supprimer-panier:hover,
        .btn-supptoute-panier:hover,
        .btn-passerComm:hover {
            background-color: #1877f2; /* Couleur du bouton lors du passage de la souris */
        }

        .btn-ajouter-panier.disabled {
            background-color: #ccc; /* Couleur de fond grise */
            color: #888; /* Couleur du texte grise */
            cursor: not-allowed; /* Curseur non autorisé */
            margin-left: 30px; 
        }
        
        
        /* Style de la modal */
        .modalpanier {
            display: none; /* Masquer la modal par défaut */
            position: fixed; /* Position fixe pour recouvrir toute la fenêtre */
            z-index: 1; /* Position au-dessus du reste du contenu */
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto; /* Ajoute un défilement si nécessaire */
            background-color: rgba(0, 0, 0, 0.1); /* Fond semi-transparent */
        }
        
        /* Style du contenu de la modal */
        .modal-contentpanier {
            background-color: #fefefe;
            margin: auto;
            padding: 20px;
            border: 1px solid #888;
            width: 30%;
            position: absolute;
            left: 80%;
            top: 50%;
            transform: translate(-50%, -50%);
            height: 450px; /* Hauteur maximale pour le contenu de la modal */
        }

        
        /* Style pour le bouton de fermeture (×) */
        .closepanier {
            color: #aaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
        }
        
        .closepanier:hover,
        .closepanier:focus {
            color: black;
            text-decoration: none;
            cursor: pointer;
        }
  
        /* Style pour la liste des produits dans la modal */
        .product-list {
            height: 300px; /* Hauteur maximale pour la liste des produits */
            overflow-y: auto; /* Ajouter une barre de défilement vertical si nécessaire */
        }

        .product-in-cart {
            display: flex;
            padding: 10px;
            margin-bottom: 10px;
            border-bottom: 1px solid #ccc;
        }

        .product-image-cart {
            width: 100px;
            height: 100px;
            margin-right: 10px;
            border-radius: 10px;
        }

        .product-details-cart {
            flex: 1;
        }

        .product-details-cart h3 {
            margin-top: 0;
            margin-bottom: 5px;
        }

        .product-details-cart p {
            margin: 0;
        }

        .prix {
            color: #3642dd; /* Couleur du texte pour le prix */
        }
    </style>
{% endblock %}

{% block content %}
<h1> Détail de produit </h1>
    <div class="container">
        <div class="left">
            <div class="product-details-container">
                <img class="product-image" src="{{ asset('images/produit/' ~ produit.getImageProduit()) }}" alt="Image de produit">
                <div class="product-details">
                    <h2>{{ produit.getNomProduit() }}</h2>
                    <h3>Categorie: {{ produit.getCategProduit()}}</h3>
                    <h4>Description: </h4>
                    <p class="description">{{ produit.getDescriptionProduit() }}</p>
                     <h5 class="produit-prix">
                    <span><i class="fas fa-coins" style="color: #3642dd;"></i></span>
                         Prix : {{ produit.getPrixProduit() }} $
                     </h5>  
                    <p class="stock">{{ produit.getStockProduit() }} pièce(s) disponible en stock</p>
                      {% if produit.getStockProduit() == 0 %}
                        <button type="button" class="btn-ajouter-panier disabled">Stock épuisé</button>
                    {% else %}
                        <div class="input-spinner">
                            <input type="number" id="quantity" name="quantity" value="1" min="1" max="{{ produit.getStockProduit() }}">
                            <button type="button" class="btn-ajouter-panier" data-produit-id="{{ produit.getIdProduit()}}">Ajouter au Panier</button>
                        </div>
                    {% endif %}
                </div>
            </div>
        </div>
    </div>


<!------------ Modal panier ------------>
<div id="modalpanier" class="modalpanier">
    <div class="modal-contentpanier">
        <span class="closepanier">&times;</span>
        <h2>Votre Panier</h2>
        {% if products is empty %}
            <div class="product-in-cart" >
                <p>Votre panier est vide.</p>
            </div>    
        {% else %}
            <div class="product-list">
                {% for product in products %}
                <div class="product-in-cart">
                    <img class="product-image-cart" src="{{ asset('images/produit/' ~ product.getImageProduit()) }}" alt="Image de produit">
                    <div class="product-details-cart">
                        <h3>{{ product.getNomProduit() }}</h3>
                        <p class="prix"><span><i class="fas fa-coins" style="color: #3642dd;"></i></span>  {{ product.getPrixProduit() }} $</p>
                        <div class="modifier-panier">
                            <div class="spinner" style="display: flex;">
                                <input type="number" id="quantity2" name="quantity2" value="1" min="1" max="{{ product.getStockProduit() }}">
                                <button type="button" class="btn-supprimer-panier" style="width: 80px;" data-produit-id="{{ product.getIdProduit() }}">Supprimer</button>
                            </div>
                        </div>
                    </div>
                </div>
                {% endfor %}
            </div>
            <div class="Commande" style="display: flex;">
                <button type="button" class="btn-passerComm">Commander</button>
                <button type="button" class="btn-supptoute-panier">Supprimer</button>
            </div>
        {% endif %}
    </div>
</div>


<script>
  document.addEventListener("DOMContentLoaded", function () {
            const btnAjouterPanier = document.querySelector('.btn-ajouter-panier');
            if (btnAjouterPanier) {
                btnAjouterPanier.addEventListener('click', function () {
                    const produitId = this.getAttribute('data-produit-id');
                    const quantity = parseInt(document.getElementById('quantity').value);

                    // Vérifier si la quantité est supérieure à zéro
                    if (quantity > 0) {
                        // Effectuer une boucle pour ajouter chaque élément au panier
                        for (let i = 0; i < quantity; i++) {
                            fetch(`/ajouter-au-panier/${produitId}/1`, { // Correction : ajouter des backticks pour inclure les variables
                                method: 'POST',
                            }).then(response => {
                                if (response.ok) {
                                    // Mettre à jour l'affichage du spinner et du stock (optionnel)
                                    // Rafraîchir la page ou effectuer toute autre action nécessaire
                                    location.reload();
                                } else {
                                    console.error('Erreur lors de l\'ajout au panier');
                                }
                            }).catch(error => {
                                console.error('Erreur réseau:', error);
                            });
                        }
                    }
                });
            }
        });

        // Obtenir la modal
        var modal = document.getElementById('modalpanier');

        // Obtenir le bouton qui ouvre la modal (bouton panier)
        var btn = document.querySelector('.btn-primary');

        // Obtenir l'élément <span> qui ferme la modal
        var span = document.getElementsByClassName('closepanier')[0];

        // Fonction pour afficher la modal
        btn.onclick = function() {
            modal.style.display = 'block';
        }

        // Fonction pour fermer la modal lorsque l'utilisateur clique sur <span> (×)
        span.onclick = function() {
            modal.style.display = 'none';
        }

        // Fermer la modal lorsque l'utilisateur clique en dehors de celle-ci
        window.onclick = function(event) {
            if (event.target == modal) {
                modal.style.display = 'none';
            }
        }


        document.addEventListener("DOMContentLoaded", function () {
        const btnSupprimerPanier = document.querySelector('.btn-supptoute-panier');
        if (btnSupprimerPanier) {
            btnSupprimerPanier.addEventListener('click', function () {
                // Envoyer une requête AJAX pour supprimer tous les produits du panier
                fetch('/supprimer-panier', {
                    method: 'POST'
                }).then(response => {
                    if (response.ok) {
                        // Mettre à jour l'affichage ou effectuer toute autre action nécessaire
                        location.reload(); // Recharger la page pour refléter les changements
                    } else {
                        console.error('Erreur lors de la suppression du panier');
                    }
                }).catch(error => {
                    console.error('Erreur réseau:', error);
                });
            });
        }
    });

document.addEventListener("DOMContentLoaded", function () {
    const btnPasserCommande = document.querySelector('.btn-passerComm');
    if (btnPasserCommande) {
        btnPasserCommande.addEventListener('click', function () {
            window.location.href = "{{ path('app_commande') }}";
        });
    }
});



document.addEventListener("DOMContentLoaded", function () {
    const btnSupprimerPanier = document.querySelectorAll('.btn-supprimer-panier');
    btnSupprimerPanier.forEach(btn => {
        btn.addEventListener('click', function () {
            const productId = this.getAttribute('data-produit-id');
            fetch(`/supprimer-produit-panier/${productId}`, {
                method: 'POST'
            }).then(response => {
                if (response.ok) {
                    // Rafraîchir la liste des produits dans la modal du panier
                    // Vous pouvez également mettre à jour l'affichage d'une autre manière si nécessaire
                    location.reload();
                } else {
                    console.error('Erreur lors de la suppression du produit du panier');
                }
            }).catch(error => {
                console.error('Erreur réseau:', error);
            });
        });
    });
});

// Récupérer l'élément avec l'ID "cartCount"
const cartCountElement = document.getElementById('cartCount');

// Effectuer une requête AJAX pour récupérer le nombre de produits dans le panier
fetch('/cartCount')
    .then(response => response.json())
    .then(data => {
        // Mettre à jour le contenu de l'élément "cartCount" avec le nombre de produits
        cartCountElement.textContent = `(${data.nombreProduits})`;
    })
    .catch(error => {
        console.error('Erreur lors de la récupération du nombre de produits dans le panier :', error);
    });




</script>


{% endblock %}
