{#modiferProduit.html.twig #}
{% extends 'feed.html.twig' %}

{% block title %}
    ArtHive | Modifier
{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="{{ asset('/styleFeed.css') }}">
    <style>
        .bouton-prod {
            display: block;
            width: 150px; 
            margin-top: 10px;
            margin-bottom: 10px;
            margin-left:100px;
            background-color: #3642dd;
            color: white;
            padding: 8px 10px;
            text-decoration: none;
            border-radius: 20px;
            transition: background-color 0.3s ease; 
            border: none; 
            cursor: pointer;
            font-size: 16px;
        }

        .bouton-prod:hover {
            background-color: #1877f2; 
        }

        .Categorie select {
            border-radius: 10px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            padding: 8px 12px;
            color: #1877f2;
            font-size: 20px;
        }

        .Categorie select::-ms-expand {
            display: block;
            color: #333; /* Couleur de la flèche */
            font-size: 16px; /* Taille de la flèche */
            line-height: 1; /* Hauteur de ligne pour centrer la flèche */
            padding-right: 5px; /* Espacement entre la flèche et le texte */
        }

        /* Style au survol */
        .Categorie select:hover {
            border-color: #1877f2; /* Changement de couleur de bordure au survol */
        }

        /* Style au focus */
        .Categorie select:focus {
            outline: none; /* Supprime la bordure de focus par défaut */
            box-shadow: 0 0 0 2px rgba(4, 8, 236, 0.2); /* Ajoute une bordure de focus */
        }

        .cadre-image {
            border: 2px solid #ccc;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            padding: 10px;
            width: 500px;
            height: auto;
            margin-left: 30px;
            margin-bottom: 30px;
        }
        .cadre-image img {
            max-width: calc(100% - 20px); 
            max-height: calc(120% - 20px);
            display: block;
            margin: auto;
        }

        .text-field,
        .text-area {
            border: 1px solid #ccc;
            padding: 4px;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            margin-bottom: 10px;
        }

        .text-area {
            width: 400px;
            padding: 5px;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
           
        }

         .text-field {
            width: 400px; /* Largeur souhaitée pour les champs de texte */
            height: 40px; /* Hauteur souhaitée pour les champs de texte */
        }
    </style>
{% endblock %}

{% block content %}
   
    {{ form_start(form) }}
        <div class="formulaire" style="margin-left: 50px; font-size: 20px; background:#ffffffee; padding:40px; border-radius:20px; width: 110%;">
         <h1 style="text-align: center; margin-bottom: 20px; font-size: 40px; font-weight: bold; color: #4848ed;">Modifier produit</h1>
         <div class="formulaire" style="margin-left: 70px">
             <div class="cadre-image">
                    {{ form_row(form.imageProduit, {'label': false, 'attr': {'onchange': 'previewImage(event)'}}) }}
                     <img id="image-preview" src="{{ asset('images/produit/' ~ produit.imageProduit) }}" alt="Image du produit">

             </div>

            <div class="nomProduit">
                {{ form_label(form.nomProduit) }}
                {{ form_widget(form.nomProduit, {'attr': {'class': 'text-field', 'style': 'margin-left: 15px;'}}) }}
            </div>

            <div class="prix">
                {{ form_label(form.prixProduit, null, {'label_attr': {'style': 'margin-bottom: 10px;'}}) }}
                {{ form_widget(form.prixProduit, {'attr': {'class': 'text-field', 'style': 'margin-left: 15px;'}}) }}
            </div>

            <div class="dispo">
                {{ form_label(form.disponibilite, null, {'label_attr': {'style': 'margin-bottom: 10px;'}}) }}
                {{ form_widget(form.disponibilite, {'attr': {'style': 'margin-left: 15px; border: 1px solid #ccc; padding: 5px; ' }}) }}
            </div>

            <div class="stock">
                {{ form_label(form.stockProduit, null, {'label_attr': {'style': 'margin-bottom: 10px;'}}) }}
                {{ form_widget(form.stockProduit, {'attr': {'class': 'text-field', 'style': 'margin-left: 15px; margin-top: 20px;' }}) }}
            </div>

            <div class="Categorie">
                {{ form_label(form.categProduit, null, {'label_attr': {'style': 'margin-right: 10px;'}}) }}
                {{ form_widget(form.categProduit, {'attr': {'style': 'border: 1px solid #ccc; padding: 5px; margin-bottom: 10px;'}}) }}
            </div>

            <div class="description">
                {{ form_label(form.descriptionProduit, null, {'label_attr': {'style': 'margin-bottom: 10px;'}}) }}
                {{ form_widget(form.descriptionProduit, {'attr': {'class': 'text-area', 'style': 'margin-bottom: 10px; border: 1px solid #ccc; padding: 5px;', 'rows': '4'}}) }}
            </div>

            <div class="boutons-container" style="display: flex; margin-top: 20px;">
                <button type="submit" class="bouton-prod">Modifier</button>
                <a href="{{ path('vos_produits') }}" class="bouton-prod" style="margin-left: 100px;  text-align: center;">Annuler</a>
            </div>
        </div>
      </div>  
    {{ form_end(form) }}

 <script>
    function previewImage(event) {
        var input = event.target;
        var reader = new FileReader();
        reader.onload = function() {
            var img = document.getElementById('image-preview');
            img.src = reader.result;
        };
        reader.readAsDataURL(input.files[0]);
    }



     // Récupérer l'élément avec l'ID "cartCount" dans le bloc "panier"
        const cartCountElement = document.getElementById('cartCount');

        // Effectuer une requête AJAX pour récupérer le nombre de produits dans le panier de la classe "achat"
        fetch('/cartCount')
            .then(response => response.json())
            .then(data => {
                // Mettre à jour le contenu de l'élément "cartCount" avec le nombre de produits
                cartCountElement.textContent = `(${data.nombreProduits})`;
            })
            .catch(error => {
                console.error('Erreur lors de la récupération du nombre de produits dans le panier :', error);
            });
</script>

    
{% endblock %}

