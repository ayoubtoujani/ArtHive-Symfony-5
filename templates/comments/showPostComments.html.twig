{% extends 'feed.html.twig' %}


{% block title %}
    ArtHive | Comments
{% endblock %}

{% block stylesheets %}
    {{ parent() }}

    <style>
        /* Add any additional styles here */
        .post-container {
            display: flex;
            align-items: flex-start; /* Align items at the start (top) of the container */
            margin-top: 2rem;
        }

        .post-image {
    flex: 0 0 80%; /* Adjust width to 80% */
    max-width: 80%; /* Adjust max-width to 80% */
    margin-top: 4rem;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1); /* Add box shadow to post image */
}
        .comment-section {
            flex: 1; /* Take up remaining space in the container */
            margin-left: 2rem; /* Add space between the post image and the comment section */
            /* Add any additional styling for the comment section */
        }

        .comment {
            margin-top: 1rem;
            
            /* Add any additional styling for individual comments */
        }

        .comment-textfield {
            min-height: 3rem;
            width: calc(100% - 40px);
            box-shadow: 0 0 5px rgba(0, 0, 0, 0.1); /* Add box shadow to comment text field */
            background-color: #f0f0f0; /* Light grey background color */
            font-size: 1rem; /* Adjust font size */
        }

        .comment-submit-button {
            display: inline-block;
            padding: 0.6rem 2rem;
            font-weight: 500;
            border-radius: var(--border-radius);
            cursor: pointer;
            transition: all 300ms ease;
            font-size: 0.9rem;
            text-align: center;
            background-color: #007bff; /* Use the same color as the primary button */
            color: white; /* Text color */
            border: none; /* Remove border */
        }
        .seeall-submit-button {
            display: inline-block;
            padding: 0.6rem 2rem;
            font-weight: 500;
            border-radius: var(--border-radius);
            cursor: pointer;
            transition: all 300ms ease;
            font-size: 0.9rem;
            text-align: center;
            background-color: #007bff; /* Use the same color as the primary button */
            color: white; /* Text color */
            border: none; /* Remove border */
        }

        .comment-submit-button:hover {
            background-color: #0056b3; /* Darker shade on hover */
        }

        .comment-list {
            margin-top: 2rem;
        }
        .comment-list-seeall {
            margin-top: 2rem;
        }


        .comment-user-info {
            display: flex;
            align-items: center;
            margin-bottom: 0.5rem;
        }

        .comment-user-name {
            font-weight: bold;
            margin-right: 1rem;
        }

        .comment-date {
            color: #888;
            font-size: 0.9rem;
            margin-right: 1rem;
        }
         .publication-date {
            color: #888;
            font-size: 0.9rem;
            margin-right: 1rem;
        }

        .comment-content {
            margin-bottom: 1rem;
        }

        .like-toggle {
            margin-top: 0.5rem;
        }

        .like-checkbox {
            display: none;
        }

        .like-checkbox + label {
            cursor: pointer;
            color: #666;
        }

        .like-checkbox:checked + label {
            color: #f00; /* Change color when liked */
        }

        .dropdown {
            position: relative;
            display: inline-block;
        }

        .dropdown-content {
            display: none;
            position: absolute;
            background-color: #f9f9f9;
            min-width: 100px;
            box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2);
            z-index: 1;
        }

        .dropdown-content a {
            color: black;
            padding: 12px 16px;
            text-decoration: none;
            display: block;
        }

        .dropdown-content a:hover {
            background-color: #f1f1f1;
        }

        .dropdown:hover .dropdown-content {
            display: block;
        }

        .dropdown:hover .dropbtn {
            background-color: #3e8e41;
        }
         .add-page-text-field {
            width: calc(100% - 40px);
            height: 100px;
            margin-bottom: 20px;
            resize: none;
            border: 1px solid #ccc;
            border-radius: 5px;
            padding: 10px;
            font-size: 16px;
        }
        .user-info {
    display: flex;
    align-items: center; /* Align items vertically */
}

.user-info img {
    margin-right: 10px; /* Add spacing between image and text */
}

.user-details {
    display: flex;
    flex-direction: column; /* Arrange details in a column */
}


.post-image-container {
    display: flex;
    align-items: center; /* Align items vertically */
}
.save-button {
    margin-left: auto; /* Move the button to the right */
    margin-right: 20px; /* Add some space between the button and the image */
}

/* Additional styling for the button (you can adjust as needed) */
.save-button {
    font-family: inherit;
    font-size: 20px;
    background: #212121;
    color: white;
    fill: rgb(155, 153, 153);
    padding: 0.7em 1em;
    padding-left: 0.9em;
    display: flex;
    align-items: center;
    cursor: pointer;
    border: none;
    border-radius: 15px;
    font-weight: 1000;
    width: 200px;
    max-width: 200px;
    height: 90px;
    
}

.save-button span {
    display: block;
    margin-left: 0.3em;
    transition: all 0.3s ease-in-out;
}

.save-button svg {
    display: block;
    transform-origin: center center;
    transition: transform 0.3s ease-in-out;
}

.save-button:hover {
    background: #000;
}

.save-button:hover .svg-wrapper {
    transform: scale(1.25);
    transition: 0.5s linear;
}

.save-button:hover svg {
    transform: translateX(1.2em) scale(1.1);
    fill: #fff;
}

.save-button:hover span {
    opacity: 0;
    transition: 0.5s linear;
}

.save-button:active {
    transform: scale(0.95);
}
.fav {
  background-color: rgb(36, 36, 36);
  display: flex;
  align-items: center;
  gap: 14px;
  padding: 10px 15px 10px 10px;
  cursor: pointer;
  user-select: none;
  border-radius: 10px;
  box-shadow: rgba(46, 46, 46, 0.2) 0px 8px 24px;
  color: rgb(255, 255, 255);
  width: 200px;
    max-width: 200px;
    height: 80px;

}

#favorite {
  display: none;
}

#favorite:checked + .fav svg {
  fill: hsl(0deg 100% 50%);
  stroke: hsl(0deg 100% 50%);
  animation: heartButton 1s;
}

@keyframes heartButton {
  0% {
    transform: scale(1);
  }

  25% {
    transform: scale(1.3);
  }

  50% {
    transform: scale(1);
  }

  75% {
    transform: scale(1.3);
  }

  100% {
    transform: scale(1);
  }
}

#favorite + .fav .action {
  position: relative;
  overflow: hidden;
  display: grid;
}

#favorite + .fav .action span {
  grid-column-start: 1;
  grid-column-end: 1;
  grid-row-start: 1;
  grid-row-end: 1;
  transition: all 0.5s;
}

#favorite + .fav .action span.option-1 {
  transform: translate(0px, 0%);
  opacity: 1;
}

#favorite:checked + .fav .action span.option-1 {
  transform: translate(0px, -100%);
  opacity: 0;
}

#favorite + .fav .action span.option-2 {
  transform: translate(0px, 100%);
  opacity: 0;
}

#favorite:checked + .fav .action span.option-2 {
  transform: translate(0px, 0%);
  opacity: 1;
}

body {
            background-image: url('https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTSivdg9sGuIwUPz6n3Cx2W0FYXTOqRkUO4HEkoqd6oAFESCcTrQxGoK_7kN9JXI8SZkbs&usqp=CAU');
            background-size: cover;
            background-repeat: no-repeat;
            background-attachment: fixed;
        }

.error {
    color: red; 
    font-size: 14px;

}
.fb-share-button {
    background-color: #3b5998;
    color: white;
    padding: 10px 20px;
    border-radius: 5px;
    text-decoration: none;
    display: inline-block;
    margin-top: 10px;
    width: 200px;
    max-width: 200px;
    height: 60px;
    padding-bottom: 10px;
}

.button-container {
    display: block; /* Display the container as a block */
    margin-top: 20px; /* Add some spacing if needed */
    padding-left: 50px; /* Add padding to the left */
    padding-bottom: 50px; /* Add padding to the right */
}

.button-container button,
.button-container label,
.button-container a {
    display: block; /* Display buttons as blocks */
    margin-bottom: 10px; /* Add spacing between buttons */
}
.cancel-button {
   
      display: inline-block;
            padding: 0.6rem 2rem;
            font-weight: 500;
            border-radius: var(--border-radius);
            cursor: pointer;
            transition: all 300ms ease;
            font-size: 0.9rem;
            text-align: center;
           
 background-color: #dc3545;
             color: white; /* Text color */
            border: none; /* Remove border */
            width: 100px;
    max-width: 100px;
        
}
    </style>
{% endblock %}

{% block content %}
 <!-- background image for this twig page  -->
   
<form action="{{ path('show_comments', { 'id': publication.idPublication }) }}" method="post" enctype="multipart/form-data" novalidate>
    <div class="post-container">
        <!-- User's Information -->
       <div class="user-info">
    <img src="{{ asset('images/' ~ publication.getUser().getPhoto() )}}" style="width: 45px; height: 45px;" alt="User Image">
    <div class="user-details">
        <div class="publication-user-name">{{ publication.getUser().getNomUser() }} {{ publication.getUser().getPrenomUser() }}</div>
        <span class="publication-date">{{ publication.getDCreationPublication()|date('F d, Y') }}</span>
    </div>
</div>

       <!-- Post Image and Save Button Container -->
    <div class="post-image-container">
        <!-- Post Image -->
        <img src="{{ asset('images/' ~ publication.getUrlFile()) }}" alt="Post Image" class="post-image" style="background-color: white; padding: 20px; border-radius: 10px;">
    <div class="button-container">
     <div id="fb-root"></div>
<script async defer crossorigin="anonymous" src="https://connect.facebook.net/fr_FR/sdk.js#xfbml=1&version=v19.0&appId=1848760258882344" nonce="DWEjm15c"></script>

<div class="fb-share-button" data-href="" data-layout="" data-size="">
    <a target="_blank" href="https://www.facebook.com/sharer/sharer.php?u=http%3A%2F%2F127.0.0.1%3A8000%2FshowComments%2F204&amp;src=sdkpreparse" class="fb-xfbml-parse-ignore">Partager</a>
</div>
        
        <!-- Save Button -->
        <button class="save-button" type="button" id="save-post-image">
            <div class="svg-wrapper-1">
                <div class="svg-wrapper">
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="30" height="30" class="icon">
                        <path d="M22,15.04C22,17.23 20.24,19 18.07,19H5.93C3.76,19 2,17.23 2,15.04C2,13.07 3.43,11.44 5.31,11.14C5.28,11 5.27,10.86 5.27,10.71C5.27,9.33 6.38,8.2 7.76,8.2C8.37,8.2 8.94,8.43 9.37,8.8C10.14,7.05 11.13,5.44 13.91,5.44C17.28,5.44 18.87,8.06 18.87,10.83C18.87,10.94 18.87,11.06 18.86,11.17C20.65,11.54 22,13.13 22,15.04Z"></path>
                    </svg>
                </div>
            </div>
            <span>Save</span>
        </button>
        <input
  value="favorite-button"
  name="favorite-checkbox"
  id="favorite"
  checked="checked"
  type="checkbox"
/>
<label class="fav" for="favorite">
  <a href="{{ path('add_to_favorites', {'id': publication.idPublication}) }}" >
  <svg
    class="feather feather-heart"
    stroke-linejoin="round"
    stroke-linecap="round"
    stroke-width="1"
    stroke="currentColor"
    fill="none"
    viewBox="0 0 24 24"
    height="30"
    width="30"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z"
    ></path>
  </svg>
  </a>
  <div class="action">
   
    <span class="option-2">Add to Favorites</span>
  </div>
</label>
      

    </div>
    </div>
    
</div>
    <div class="comment-section">
        <div class="comment">
            <div class="comment-user-image">
                <img src="{{ asset('images/' ~ userFromDb.getPhoto() )}}" style="width: 45px; height: 45px;" alt="User Image">
            </div>
            <div>
                <div class="comment-user-name">{{ userFromDb.getNomUser() }} {{ userFromDb.getPrenomUser() }}</div>
               {% if comment is defined %}
    {{ form_start(updateCommentForm) }}
    <div>
        {{ form_label(updateCommentForm.contenuCommentaire, null, {'label_attr': {'for': 'contenuCommentaire'}}) }}
        {{ form_widget(updateCommentForm.contenuCommentaire, {'attr': {'id': 'contenuCommentaire', 'class': 'add-page-text-field'}}) }}
       <div class="error"> {{ form_errors(updateCommentForm.contenuCommentaire) }} </div>
    </div>
    <button type="submit" class="comment-submit-button">Save Update</button>
    <a href="{{ path('show_comments', { 'id': publication.idPublication }) }}" class="cancel-button">Cancel</a>
    {{ form_end(updateCommentForm) }}
{% else %}
    {{ form_start(commentForm) }}
    <div>
        {{ form_label(commentForm.contenuCommentaire, null, {'label_attr': {'for': 'contenuCommentaire'}}) }}
        {{ form_widget(commentForm.contenuCommentaire, {'attr': {'id': 'contenuCommentaire', 'class': 'add-page-text-field'}}) }}
        <div class="error"> {{ form_errors(commentForm.contenuCommentaire) }} </div>
    </div>
    <button type="submit" class="comment-submit-button">Add</button>
    <a href="{{ path('show_comments', { 'id': publication.idPublication }) }}" class="cancel-button">Cancel</a>
    {{ form_end(commentForm) }}
{% endif %}
                
            </div>
        </div>
    </div>
        <h3>List of Comments ({{ comments|length }})</h3>
    <!-- Additional comments can be dynamically added here -->
        <div class="comment-list">
           {% for comment in comments|slice(0, 5) %}
            <div class="comment">
                <div class="comment-user-image">
                    <img src="{{ asset('images/' ~ comment.getUser().getPhoto()) }}" style="width: 45px; height: 45px;" alt="User Image">
                </div>
                <div>
                    <div class="comment-user-info">
                        <span class="comment-user-name">{{ comment.getUser().getNomUser() }}{{ comment.getUser().getPrenomUser() }}</span>
                        <span class="comment-date">{{ comment.getDAjoutCommentaire()|date('F d, Y') }}</span>
                           {% if comment.getUser().getIdUser() == user.getIdUser()%}
                                                <div class="dropdown">
                                                    <span class="dropbtn" style="font-size: 20px;">...</span>
                                                    <div class="dropdown-content">
                                                        <a href="{{ path('delete_comment', {'id': comment.getIdCommentaire()}) }}">Delete</a>
                                                        <a href="{{ path('update_comment', {'id': comment.getIdCommentaire()}) }}">Edit</a>
                                                    </div>    
                                            </div>
                                              {% endif %}
                       
                    </div>
                    <div class="comment-content">
                        {{ comment.getContenuCommentaire() }}
                    </div>
                    <div class="like-toggle">
                        <input id="like-comment-{{ comment.getIdCommentaire() }}" class="like-checkbox" type="checkbox">
                        <label for="like-comment-{{ comment.getIdCommentaire() }}">Like</label>
                    </div>
                </div>
            </div>
            {% endfor %}
            {% if comments|length > 5 %}
            <!-- Button to toggle visibility of all comments -->
            <button id="see-all-comments-btn" class="seeall-submit-button" type="button">See All</button>
        {% endif %}
        </div>
         <div id="all-comments" class="comment-list-seeall" style="display: none;">
        {% for comment in comments %}
         <div class="comment">
                <div class="comment-user-image">
                    <img src="{{ asset('images/' ~ comment.getUser().getPhoto()) }}" style="width: 45px; height: 45px;" alt="User Image">
                </div>
                <div>
                    <div class="comment-user-info">
                        <span class="comment-user-name">{{ comment.getUser().getNomUser() }}{{ comment.getUser().getPrenomUser() }}</span>
                        <span class="comment-date">{{ comment.getDAjoutCommentaire()|date('F d, Y') }}</span>
                        <div class="dropdown">
                            <span class="dropbtn">...</span>
                            <div class="dropdown-content">
                                <a href="{{ path('delete_comment', {'id': comment.getIdCommentaire()}) }}">Delete</a>
                                <a href="{{ path('update_comment', {'id': comment.getIdCommentaire()}) }}">Edit</a>
                            </div>
                        </div>
                    </div>
                    <div class="comment-content">
                        {{ comment.getContenuCommentaire() }}
                    </div>
           <!--  --> 
           <div class="like-toggle">
                        <input id="like-comment-{{ comment.getIdCommentaire() }}" class="like-checkbox" type="checkbox">
                        <label for="like-comment-{{ comment.getIdCommentaire() }}">Like</label>
                    </div>   
                </div>
            </div>
            {% endfor %}
    </div>
    </div>
</form>

 <script>
 // Get the current page URL
    var currentUrl = window.location.href;

    // Set the data-href attribute of the share button to the current URL
    document.querySelector('.fb-share-button').setAttribute('data-href', currentUrl);
 document.addEventListener("DOMContentLoaded", function () {
    const likeButtons = document.querySelectorAll('.btn-like-comment');
         const postImageUrl = "{{ asset('images/' ~ publication.getUrlFile()) }}";

    likeButtons.forEach(btn => {
        btn.addEventListener('click', function () {
            const commentId = this.getAttribute('data-comment-id');

            // Perform AJAX request to handle the like action
            fetch(`/add-reaction/${commentId}`, {
                method: 'POST',
            }).then(response => {
                if (response.ok) {
                    // Update UI to reflect the like action (optional)
                } else {
                    console.error('Error while liking the comment');
                }
            }).catch(error => {
                console.error('Network error:', error);
            });
        });
    });

    // Add click event listener to the "Save" button
    document.getElementById('save-post-image').addEventListener('click', function() {
        // Create a temporary anchor element
        const link = document.createElement('a');
        link.href = postImageUrl;
        link.download = 'post_image.jpg'; // Specify the filename for downloaded image
        document.body.appendChild(link);
        
        // Trigger the click event on the anchor element
        link.click();
        
        // Clean up: remove the temporary anchor element
        document.body.removeChild(link);
    });
});
        document.getElementById('see-all-comments-btn').addEventListener('click', function() {
            var allComments = document.getElementById('all-comments');
            if (allComments.style.display === 'none') {
                allComments.style.display = 'block';
                document.getElementById('see-all-comments-btn').innerText = 'Collapse';
            } else {
                allComments.style.display = 'none';
                document.getElementById('see-all-comments-btn').innerText = 'See All';
            }
        });

    </script>
{% endblock %}
