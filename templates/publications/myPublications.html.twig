{% extends 'feed.html.twig' %}

{% block title %}
     ArtHive | My Publications
        
{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        /* Styles for the publication list */

        .publication-container {
          display: flex;
                flex-wrap: wrap;
                justify-content: space-between; /* Ajustez l'espacement entre les produits */
                margin-top: 20px;
                padding: 20px;
                width: 100%; 
        }

        .publication-item {
           flex-basis: calc(33.33% - 25px); 
            margin-bottom: 40px; 
            margin-right: 20px;
            border: 1px solid #ccc;
            border-radius: 8px;
            background-color: #fff;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            transition: box-shadow 0.3s ease;
            position: relative; 
        }

        .publication-item:hover {
            box-shadow: 0 4px 8px rgba(4, 8, 236, 0.2);
            scale: 1.1;
            transition: 0.3s cubic-bezier(0.645, 0.045, 0.355, 1);
        }

        .publication-title {
            font-size: 10px;
            font-weight: bold;
            color: #1877f2;
            margin-bottom: 5px;
            padding: 10px;
        }

        .publication-date {
            font-size: 14px;
            color: #555;
            margin-bottom: 5px;
            padding: 10px;
        }

        .publication-image {
            width: 100%;
            height: 300px;
            border-radius: 8px 8px 0 0;
        }

        h1 {
            color: #4848ed; /* Text color in blue */
            text-align: center; /* Horizontal centering */
            margin-top: 0; /* Remove default margin to align with the rest of the content */
            margin-bottom: 20px; /* Bottom spacing to separate from the following content */
            font-size: 50px; /* Larger font size */
        }
           .content {
                width:190%;
                float: right;
            }
            /* Affiche la description du produit lorsque survolée */
            .produit-item:hover .produit-description {
                display: block;
            }

            .icon-container {
            display: flex; /* Utilisation de Flexbox */
            align-items: center; /* Alignement vertical centré */
            justify-content: center; /* Alignement horizontal centré */
        }

         .icon-container i {
           margin-right: 10px; /* Espacement entre les icônes */
             }

          

    
        .modal {
            display: none; /* Hidden by default */
            position: fixed; /* Stay in place */
            z-index: 9999; /* Sit on top */
            padding-top: 100px; /* Location of the box */
            left: 0;
            top: 0;
            width: 100%; /* Full width */
            height: 100%; /* Full height */
            overflow: auto; /* Enable scroll if needed */
            background-color: rgba(0,0,0,0.7); /* Black w/ opacity */
        }

        .modal-content {
            margin: auto;
            display: block;
            max-width: 80%; /* Max width */
            max-height: 80%; /* Max height */
        }
        .modal-content-comment {
            position: relative;
            margin: auto;
            width: 80%;
            max-width: 600px;
            background-color: #fefefe;
            padding: 20px;
            border-radius: 8px;
        }

        .modal-image {
            max-width: 50%; /* Set maximum width */
            max-height: 80vh; /* Set maximum height as 80% of viewport height */
            display: block;
            margin: 0 auto; /* Center the image horizontally */
        }

        .close {
            position: absolute;
            top: 20px;
            right: 20px;
            color: #fff;
            font-size: 24px;
            cursor: pointer;
        }
        .publication-title {
                display: none;
                position: absolute;
                top: 80%; /* Positionne le rectangle de description au milieu verticalement */
                left: 50%; /* Positionne le rectangle de description au milieu horizontalement */
                transform: translate(-50%, -50%); /* Centre le rectangle de description */
                width: 90%; /* Largeur ajustée pour le rectangle de description */
                background-color: rgba(255, 255, 255, 0.8); /* Fond blanc avec opacité */
                padding: 10px; /* Espacement autour du texte de description */
                box-sizing: border-box; /* Inclut le padding dans la largeur et la hauteur */
                text-align: center; /* Centrer le texte horizontalement */
        }
        .publication-item:hover .publication-title {
                display: block;
        }
                .icon-container {
            display: flex; /* Utilisation de Flexbox */
            align-items: center; /* Alignement vertical centré */
            justify-content: center; /* Alignement horizontal centré */
        }
    </style>
{% endblock %}

{% block content %}

    <h1>My Publications</h1>
    
    <div class="publication-container">
        {% for publication in publications %}
        
            <div class="publication-item">
            
                <div style="position: relative;">
             <div class="dropdown">
    <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
        Actions
    </button>
    <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
<a id="updatePost" class="dropdown-item" href="{{ path('update_post', {'id': publication.getIdPublication()}) }}" >Update</a>
        <a class="dropdown-item" href="{{ path('delete_publication', {'id': publication.getIdPublication()}) }}">Delete</a>
    </div>
</div>
                    <img class="publication-image" src="{{ asset('images/' ~ publication.getUrlFile()) }}" alt="Image de la publication">
                    <p class="publication-title">{{ publication.getContenuPublication() }}</p>
                  <div class="icon-container">
                       <i class="fa-solid fa-search-plus zoom-icon" style="color: #3642dd;"></i>
                    
                     </div>  
                    <div style="position: absolute; bottom: 10px; right: 10px;">
                    
                    </div>
                </div>
                <div style="display: flex; align-items: center; justify-content: space-between; margin-top: 10px;">
                    <div style="display: flex; align-items: center;">
                        <img class="profile-image" src="{{ asset('images/' ~ publication.getUser().getPhoto()) }}" style="width: 45px; height: 45px;" alt="Profile Image">
                        <div style="margin-left: 10px;">
                    <p class="username-label">{{ publication.getUser().getNomUser() }} {{ publication.getUser().getPrenomUser() }}</p>
                     <p class="publication-date">{{ publication.getDCreationPublication()|time_diff }}</p>
                        </div>
                    </div>
                   <div style="display: flex; align-items: center;">
                        <!-- Heart icon toggling -->
                        <div class="heart-container">
                            <img class="heart-icon" src="{{ asset('images/emptyHeart.png') }}" style="width: 30px; height: 30px;" alt="Heart Icon">
                            <p class="likes-label">3</p>
                        </div>
    
                        <div style="display: flex; align-items: center; margin-left: 10px;">
    <img class="comment-icon" src="{{ asset('images/5338282.png') }}" style="width: 30px; height: 30px;" alt="Comment Icon" id="comment-icon">
    <p class="comments-label">2</p>
</div>

                        <!-- Add more like/comment icons as needed -->
                    </div>
                </div>
            </div>
        {% endfor %}
    </div>
    <!-- Modal popup -->
    <div id="myModal" class="modal">
        <span class="close">&times;</span>
        <div class="modal-content">
            <img id="modal-img" class="modal-image">
        </div>
    </div>
     <div id="updatePostModal" class="modal">
    <div class="modal-content">

    </div>
</div>
  <script>
document.addEventListener("DOMContentLoaded", function() {
    const zoomIcons = document.querySelectorAll('.zoom-icon');
    const modal = document.getElementById('myModal');
    const modalImg = document.getElementById("modal-img");
    const closeModal = document.getElementsByClassName("close")[0];
    const heartIcons = document.querySelectorAll('.heart-icon'); // Select heart icons correctly
    const updatePostButton = document.getElementById("updatePost"); // Select the create post button
    const updatePostModal = document.getElementById("updatePostModal"); // Select the add post modal

    zoomIcons.forEach(icon => {
        icon.addEventListener('click', function() {
            const publicationItem = this.closest('.publication-item');
            const publicationImage = publicationItem.querySelector('.publication-image').src;

            modal.style.display = "block";
            modalImg.src = publicationImage;
        });
    });
      
      

    heartIcons.forEach(icon => {
        icon.addEventListener('click', function() {
            const currentSrc = this.src;
            if (currentSrc.includes('emptyHeart.png')) {
                this.src = "{{ asset('images/fullheart.png') }}";
            } else {
                this.src = "{{ asset('images/emptyHeart.png') }}";
            }
        });
    });

    // Close the modal when clicked outside the image or on the close button
    window.onclick = function(event) {
        if (event.target === modal) {
            modal.style.display = "none";
        }
    }

    closeModal.onclick = function() {
        modal.style.display = "none";
    }
 function openUpdatePostModal() {
    const updatePostModal = document.getElementById("updatePostModal"); // Select the add post modal
        updatePostModal.style.display = "block";
    }
    
     if (updatePostButton) {
        updatePostButton.addEventListener('click', openUpdatePostModal);
    }

    

   
});


 document.addEventListener("DOMContentLoaded", function() {
            const commentIcon = document.getElementById('comment-icon');
            if (commentIcon) {
                commentIcon.addEventListener('click', function() {
                    window.location.href = "{{ path('app_comments') }}"; // Use the route name defined in your Symfony routes
                });
            }
        });
  

  </script>
    
{% endblock %}